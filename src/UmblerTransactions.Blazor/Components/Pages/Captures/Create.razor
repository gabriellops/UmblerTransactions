@page "/captures"

@rendermode InteractiveServer
@inject ICaptureService _service
@inject NavigationManager _navigation
@inject SweetAlertService _alert

<PageTitle>Realizar uma captura</PageTitle>

<div class="row justify-content-center align-items-center min-vh-100">
    <div class="col-6">
        <div class="card p-3 shadow-sm">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <h3 class="card-title">Realizar a captura de uma transação</h3>
                    <div>
                        <button class="btn btn-secondary me-2" @onclick="CancellationTransaction">Cancelar transação</button>
                        <button class="btn btn-primary" @onclick="AddTransaction">Criar transação</button>
                    </div>
                </div>
                <EditForm Model="Capture" OnValidSubmit="OnValidSubmit" method="put" FormName="CaptureTrasactionForm" autocomplete="off" Enhance>
                    <DataAnnotationsValidator />


                    <div class="mb-3">
                        <label for="idPagamento" class="form-label">Id do pagamento</label>
                        <InputGuid id="idPagamento" @bind-Value="Capture.Id" class="form-control" Placeholder="24bc8366-fc31-4d6c-8555-17049a836a07" />
                        <ValidationMessage For="()=> Capture.Id" />
                    </div>

                    <div class="d-flex justify-content-center">
                        <button type="submit" class="btn btn-primary col-6">Confirmar</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    public CaptureRequest Capture { get; set; } = new();

    private async Task OnValidSubmit(EditContext editContext)
    {
        var context = editContext;

        var response = await _service.Edit(Capture.Id);

        if (response.ReturnMessage == "Operation Successful")
            sucessAlert();
    }

    private void sucessAlert()
    {
        _alert.FireAsync(new SweetAlertOptions
            {
                Title = "Captura realizada!",
                Text = $"Captura total da transação com sucesso.",
                Icon = SweetAlertIcon.Success
            });
    }

    public void AddTransaction()
    {
        _navigation.NavigateTo("/");
    }

    public void CancellationTransaction()
    {
        _navigation.NavigateTo("/cancellations");
    }


}
